name: Patch Revanced
on:
  workflow_dispatch:

jobs:
  patch:
    name: Patch All Applications
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ENDPOINT_URL: ${{ secrets.ENDPOINT_URL }}
      BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Patch Script
        run: python -m src

      - name: Cleanup Previous Workflow Runs
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const allRuns = [];
            let page = 1;
            while (true) {
              const { data: runs } = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'patch.yml',
                per_page: 100,
                page,
              });
              if (runs.workflow_runs.length === 0) break;
              allRuns.push(...runs.workflow_runs);
              page++;
            }

            console.log(`Found ${allRuns.length} workflow runs.`);
            for (const run of allRuns) {
              if (run.id !== context.runId) {
                console.log(`Deleting workflow run ID: ${run.id}`);
                await github.rest.actions.deleteWorkflowRun({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: run.id,
                });
              }
            }
